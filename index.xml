<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>savchenko.tech</title>
    <link>https://savchenko.tech/</link>
    <description>Recent content on savchenko.tech</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Fri, 28 Jan 2022 00:00:00 +0000</lastBuildDate><atom:link href="https://savchenko.tech/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Is gRPC a nail in the coffin of REST?</title>
      <link>https://savchenko.tech/posts/grpc/</link>
      <pubDate>Fri, 28 Jan 2022 00:00:00 +0000</pubDate>
      
      <guid>https://savchenko.tech/posts/grpc/</guid>
      <description>There is no software system these days that works in isolation without messaging through communication protocols. With increasing popularity of Microservice architecture inter-process communication techniques become even more important.
The most common way to build request-response style communication is RESTful services. However, REST can be inefficient and error-prone to use in microservices. We would need something more scalable, loosely coupled and efficient. That is where gRPC will shine.
 gRPC (the “g” stands for something different in every gRPC release) is an inter-process communication technology that allows you to connect, invoke, operate, and debug distributed heterogeneous applications as easily as making a local function call.</description>
    </item>
    
    <item>
      <title>Team framework - my view on team collaboration</title>
      <link>https://savchenko.tech/posts/teamwork/</link>
      <pubDate>Fri, 28 Jan 2022 00:00:00 +0000</pubDate>
      
      <guid>https://savchenko.tech/posts/teamwork/</guid>
      <description>Team framework is an established set of practices that creates a solid base for an effective collaboration. It is the way to productivity and happiness of each team member.
This set of practices should solve next problems:
 Prioritizing values Resolving competing values (for example, excellence vs pragmatism, flexibility vs predictability) Resolving conflicting views (for example, what to test and on which level) Reducing time on discussing how things need to be done  I see Extreme programming as a perfect starting point for team framework.</description>
    </item>
    
    <item>
      <title>Once again about the testing</title>
      <link>https://savchenko.tech/posts/testing/</link>
      <pubDate>Fri, 21 Jan 2022 00:00:00 +0000</pubDate>
      
      <guid>https://savchenko.tech/posts/testing/</guid>
      <description>Effective software testing should minimize the amount of defects and maximize stability of the product. Achieving it in practice can be quite effortful. What to test? How many test cases? Who should test?
Questions what to test and on which level can be answered by testing pyramid.
1. Unit testing Unit testing is a type of testing where system under test is an individual unit and is done during the coding phase.</description>
    </item>
    
    <item>
      <title>Learning framework</title>
      <link>https://savchenko.tech/posts/learningframework/</link>
      <pubDate>Fri, 14 Jan 2022 00:00:00 +0000</pubDate>
      
      <guid>https://savchenko.tech/posts/learningframework/</guid>
      <description>Learning is the crucial tool on the road to mastery and true driver of the software craftsman career.
I believe that effective learning contains of components so called learning framework. This framework can be applied to any kind of learning. It does not meter if it is learning the language or preparing for the OCP (Oracle Certified Professional) exam.
So, what are those components?
1. Reflect Analyzing what works and what doesn&amp;rsquo;t can make any learning path much easier.</description>
    </item>
    
    <item>
      <title>About Maryna</title>
      <link>https://savchenko.tech/about/</link>
      <pubDate>Mon, 10 Jan 2022 00:00:00 +0000</pubDate>
      
      <guid>https://savchenko.tech/about/</guid>
      <description>I am Maryna Savchenko: software engineer, true believer in Software craftsmanship, Clean code and TDD. Enjoy learning and working with new programming languages, listening to IT podcasts, working on exciting and ambitious projects.
I started this blog to share my experience and thoughts about software engineering practices, technologies and skill set improvement.</description>
    </item>
    
    <item>
      <title>Contact information</title>
      <link>https://savchenko.tech/contactinformation/</link>
      <pubDate>Mon, 10 Jan 2022 00:00:00 +0000</pubDate>
      
      <guid>https://savchenko.tech/contactinformation/</guid>
      <description>  Email address maryna@savchenko.tech. Github https://github.com/marinasavchenko Twitter @msavchenko2  </description>
    </item>
    
  </channel>
</rss>
